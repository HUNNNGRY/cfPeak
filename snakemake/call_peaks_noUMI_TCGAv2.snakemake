shell.prefix('set -x;')
# include: 'common.snakemake'
include: 'peak_common.snakemake'
include: 'prepare_genome.snakemake'


rule all:
    input:
        get_all_inputs

rule bam2fq1:
    input:
        
    threads:
        config['threads_mapping']
    params:
        inbam = "/lulab/baopengfei/shared_data/ENCODE/smallRNA-seq/fastq/{sample_id}/released/GRCh38/alignments/bam/rep*/*.bam", # ENCODE small/miRNA
        # inbam = "/data2/BioMedOmicsData/TCGA/processed/Bam/miRNA-Seq/*/*/{sample_id}.bam", # data2
        # inbam = "/lulab/baopengfei/shared_data/pub_tissueRNA/TCGA_small/*/*/{sample_id}.bam", # lulabdata
        # inbam = "/lulab/baopengfei/shared_data/pub_tissueRNA/TCGA-HNSC_small/HNSC/*/{sample_id}.bam", # lulabdata
        # inbam = "/Share2/home/lulab1/TCGA/processed/Bam/miRNA-Seq/*/*/{sample_id}.bam",
        # inbai = "/Share2/home/lulab1/TCGA/processed/Bam/miRNA-Seq/*/*/{sample_id}.bai",
        bam = temp_dir+"/{sample_id}.bam",
        # bai = temp_dir+"/{sample_id}.bai"
    output:
        fq = output_dir+"/trimmed/{sample_id}.fastq.gz",
    log:
        output_dir+'/trimmed/log/{sample_id}.log'
    shell:
        """
        samtools view -b -F 256 -F 4 {params.inbam} > {params.bam}
        samtools fastq -@ {threads} {params.bam} | gzip -c > {output.fq}
        """
#ln -f -s {params.inbam} {params.bam};ln -f -s {params.inbai} {params.bai}
#rm unmap or secondary alignments

#sample reads into similar scale, sequentially map to + strand of tx (by JYF)
rule mapping_tx:
    input:
        # fastq = "output/{dataset}/trimmed/{sample_id}.fastq.gz"
        fastq = output_dir+"/trimmed/{sample_id}.fastq.gz",
        idx1 = [ genome_dir+"/index/bowtie2/" + rna_type + ".1.bt2" for rna_type in rna_types ],
        idx2 = [ genome_dir+"/index/bowtie2/" + rna_type + ".rev.1.bt2" for rna_type in rna_types ],
    output:
        [ output_dir+"/tbam/{sample_id}/bam/" + rna_type + ".bam" for rna_type in rna_types ],
        [ output_dir+"/tbam/{sample_id}/bam/" + rna_type + ".bam.bai" for rna_type in rna_types ],
        [ temp(output_dir+"/tbam/{sample_id}/unmapped/" + rna_type + ".fastq.gz") for rna_type in rna_types1 ],
        # output_dir+"/tbam/{sample_id}/unmapped/enhancer_rev.fastq.gz",
        output_dir+"/tbam/{sample_id}/unmapped/repeats_rev.fastq.gz",
    log:
        output_dir+'/tbam/{sample_id}/log/rule'
    threads: config['threads_mapping']
    params:
        tmpdir = temp_dir,
        seed = config['seed'],
        downsample_fq = config['downsample_fq'],
        min_fq_num = config['min_fq_num'],
        max_fq_num = config['max_fq_num'],
        tmp_fq = output_dir+"/tbam/{sample_id}/tmp.fastq.gz",        
    wildcard_constraints:
        rna_type='(?!merge).*'
        # sample_id='\w+'
    shell:
        """
        (declare -i downsample_fq={params.downsample_fq}
        declare -i min_fq_num={params.min_fq_num}
        declare -i max_fq_num={params.max_fq_num}
        declare -i num=$((`seqkit stats --basename --tabular -j {threads} {input.fastq} | grep -v "file" | cut -f 4`))
        declare -i sub_num=$(($num*$downsample_fq/100))
        [ $num -lt $min_fq_num ] && sub_num=$(($num))
        [ $num -gt $min_fq_num -a $sub_num -lt $min_fq_num ] && sub_num=$(($min_fq_num))
        [ $sub_num -gt $max_fq_num ] && sub_num=$(($max_fq_num))
        echo "use fq num: $sub_num"

        if [ $sub_num -eq 0 ]; then echo "zero num of fq"; exit 1; fi

        seqtk sample -s {params.seed} \
            {input.fastq} $sub_num | pigz -c -p {threads} > {params.tmp_fq}

        export JOBLIB_TEMP_FOLDER={params.tmpdir}
        scripts/mapping.py \
            --fastq {params.tmp_fq} \
            --index-dir {genome_dir}/index/bowtie2 \
            --bam-dir {output_dir}/tbam/{wildcards.sample_id}/bam \
            --threads {threads} \
            --priority {priority} \
            --log-dir {output_dir}/tbam/{wildcards.sample_id}/log \
            --unmapped-dir {output_dir}/tbam/{wildcards.sample_id}/unmapped \
            --mode very-fast \
            --clip-mode end-to-end \
            --multimap-max 100 \
            )> {log} 2>&1
        rm {params.tmp_fq}
        """