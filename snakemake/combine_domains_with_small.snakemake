include: 'common.snakemake'

rule all:
    input:
        expand('{output_dir}/count_matrix/mirna_and_domains.txt', output_dir=output_dir),
        expand('{output_dir}/count_matrix/mirna_and_long_bg.txt', output_dir=output_dir),
        expand('{output_dir}/count_matrix/mirna_and_domains_rna.txt', output_dir=output_dir)

rule domains_combined:
    '''Count matrix of miRNA and domains
    '''
    input:
        full_length='{output_dir}/count_matrix/transcript_mirna.txt',
        domain_long='{output_dir}/count_matrix/domains_long.txt',
        transcript_table=genome_dir + '/transcript_table/all.txt'
    output:
        '{output_dir}/count_matrix/domains_combined.txt'
    run:
        import pandas as pd

        transcript_table = pd.read_table(input.transcript_table, sep='\t')
        transcript_table.drop_duplicates('transcript_id', inplace=True)
        transcript_table.set_index('transcript_id', drop=False, inplace=True)

        # fill attributes of full length to 7 fields
        full_length = pd.read_table(input.full_length, sep='\t', index_col=0)
        full_length_features = full_length.index.to_series().str.split('|', expand=True)
        full_length_features.columns = ['gene_id', 'gene_type', 'gene_name', 'domain_id', 'transcript_id', 'start', 'end']
        # select small RNA transcripts
        full_length_features = full_length_features.query('(gene_type == "miRNA") or (gene_type == "piRNA")')
        full_length = full_length.loc[full_length_features.index.values]

        domain_long = pd.read_table(input.domain_long, sep='\t', index_col=0)

        combined = pd.concat([full_length, domain_long], axis=0)
        combined.index.name = 'feature'
        combined.to_csv(output[0], sep='\t', index=True, header=True, na_rep='NA')

rule combine_mirna_and_domains:
    '''Count matrix of miRNA and domains
    Remove genomic regions
    '''
    input:
        mirna='{output_dir}/count_matrix/transcript_mirna.txt',
        domains_long='{output_dir}/count_matrix/domains_long.txt'
    output:
        '{output_dir}/count_matrix/mirna_and_domains.txt'
    shell:
        '''{{
            cat {input.mirna} 
            awk 'NR>1' {input.domains_long}
        }} > {output}
        '''


rule combine_mirna_and_domains_rna:
    '''Count matrix of miRNA and domains
    Remove genomic regions
    '''
    input:
        mirna='{output_dir}/count_matrix/transcript_mirna.txt',
        domains_long='{output_dir}/count_matrix/domains_long.txt'
    output:
        '{output_dir}/count_matrix/mirna_and_domains_rna.txt'
    shell:
        '''{{
            cat {input.mirna}
            awk '(NR>1)&&(!($0 ~ /genomic/))' {input.domains_long}
        }} > {output}
        '''

rule combine_mirna_and_long_bg:
    '''Count matrix of miRNA and long RNAs with domain reads subtracted
    '''
    input:
        mirna='{output_dir}/count_matrix/transcript_mirna.txt',
        transcript_long_bg='{output_dir}/count_matrix/transcript_long_bg.txt'
    output:
        '{output_dir}/count_matrix/mirna_and_long_bg.txt'
    shell:
        '''{{
                cat {input.mirna} 
                awk 'NR>1' {input.transcript_long_bg}
          }} > {output}
        '''